#!/bin/bash
#
# global.conf
#
# Global configuration file for stir

# This value indicates the version number when this file was last changed:
# it does not necessarily reflect stir's current version number.
# DO NOT EDIT THIS NUMBER OR YOU MAY BLOW SOMETHING UP
GLOBAL_VERSION="3.8"


###############################################################################
# General Setup
###############################################################################

# Set the work path. This is the directory where all your
# repos are stored, with no trailing slash
# WORKPATH="{{WORKPATH}}"

# Path to repository configuration files relative to its
# root directory, usually ./config
# CONFIGDIR="{{CONFIGDIR}}"

# Path to repository configuration files relative to its
# root directory, usually ./config
# CONFIG_BACKUP="{{CONFIG_BACKUP}}"

# Check to see all servers defined (repo host, staging, production, etc) are
# returning a 200OK response
# SERVERCHECK="{{SERVERCHECK}}"

# Running stir as the root user can be dangerous so it is not allowed by
# default. Set to TRUE is really must do this.
# ALLOWROOT="{{ALLOWROOT}}"

# When ACTIVECHECK="TRUE", when running as stir --force --update --quit
# files will be scanned for changes made within the timeframe set in ACTIVETME
# (in minutes) and if any changes are found, deployment will be halted.
# ACTIVECHECK="{{ACTIVECHECK}}"
# CHECKTIME="{{CHECKTIME}}"


###############################################################################
# Git Configuration
###############################################################################

# The URL for your repository hosting, with no trailing slash. For example,
# if you use Github and your repo URL looks like https://github.com/EMRL/stir
# your REPOHOST should be set to https://github.com/EMRL
# REPOHOST="{{REPOHOST}}"

# Activate "Smart Commits"; this feature tries to create automatic
# commit messages by parsing the log files generated during
# Wordpress updates. Set to "TRUE" to activate.
# SMARTCOMMIT="{{SMARTCOMMIT}}"

# If dirty (yet to be committed) files exist in the repo, stir will normally
# not halt execution when running with the --automate flag. If you prefer to
# have the dirty files stashed and proceed with updates set the below value to
# TRUE. Files will be unstashed after the deployment is complete.
# STASH="{{STASH}}"

# Clean and compress repo before starting up
# GARBAGE="{{GARBAGE}}"


###############################################################################
# Wordpress
###############################################################################

# Wordfence check - Wordfence makes some crappy files that break certain
# commands because of permissions garbage. Setting this to TRUE will enable a
# check that stops deployment if evidence of these files is detected.
# WFCHECK="{{WFCHECK}}"

# Advanced Custom Fields Pro License
#
# Too many issues seem to crop up with the normal method of updating the
# Wordpress plugin ACF Pro. Including your license key below will enable
# upgrades to happen more reliably.
# ACFKEY="{{ACFKEY}}"
#
# If you need to lock your version of ACF fro some reason, set the value
# below to TRUE
# ACF_LOCK="{{ACF_LOCK}}"

# Gravityforms License
# GRAVITY_FORMS_LICENSE="{{GRAVITY_FORMS_LICENSE}}"


###############################################################################
# Email
###############################################################################

# If you wish to send notification emails using an SMTP server, set USE_SMTP 
# to "TRUE" and make sure ssmtp is properly installed and configured.
# USE_SMTP="{{USE_SMTP}}"

# Set the address the logfiles will be sent from
# FROM="{{FROM}}"

# Email log subject line "- project name" is appended to this,
# creating a subject line such as "Project deployed - Project Name"
# SUBJECT="{{SUBJECT}}"

# When should email logs be sent? Set to TRUE to activate.
# EMAILERROR="{{EMAILERROR}}"
# EMAILSUCCESS="{{EMAILSUCCESS}}"
# EMAILQUIT="{{EMAILQUIT}}"

# If you want your emails to be sent "clean" (with no detailed logging) set
# this value to TRUE. Full logs will still be posted to web logs. Error emails
# will continue to contain full logs.
# SHORTEMAIL="{{SHORTEMAIL}}"

# Send HTML emails?
# EMAILHTML="{{EMAILHTML}}"

# If you're sending HTML emails, define which template you'd like
# to use. HTML templates are stored in separate folders in
# /etc/stir/html. The value used below should be the folder name
# of your template.
# HTMLTEMPLATE="{{HTMLTEMPLATE}}"

# Integration Emails
# ------------------
# Set values for where you'd like to post commit messages to
# via email. You can use something like Zapier to re-post that
# to whatever service you like, or if your project tracker allows
# for input directly via email like ours does, you post directly.
# Some of these options will definitely need to be set in the
# project's .stir.sh, not in a master configuration.

# Email from domain. Whatever you're integrating with may need
# a different From: address than that of the the machine you're
# actually deploying from.
# FROMDOMAIN="{{FROMDOMAIN}}"

# If you need to specify a user, other than your unix user name
# to be the in the From: email, do it here. Otherwise Leave blank.
# FROMUSER="{{FROMUSER}}"

# Post commit logs to this email address. This should probably
# be set per-project. For examples, for our task management
# system, this email would be task-####@projects.emrl.com, with
# the #### being the task identification number for the project
# being deployed.
# POSTEMAILHEAD="{{POSTEMAILHEAD}}"
# POSTEMAILTAIL="{{POSTEMAILTAIL}}"


###############################################################################
# Digest Emails
###############################################################################

# To include your website's RSS feed in your digest emails, set your feed's
# URL below.
# NEWS_URL="{{NEWS_URL}}"


###############################################################################
# Slack Notifications
###############################################################################

# You'll need to set up an "Incoming Webhook" custom integration on the Slack
# side to get this ready to roll.
# See https://YOURTEAMNAME.slack.com/apps/manage/custom-integrations to get
# going. Once your Slack webhook is setup, run
# 'stir --test-slack [project]' to test your configuration.
#
# Set POSTTOSLACK to "TRUE" to enable Slack integration.
# POSTTOSLACK="{{POSTTOSLACK}}"

# Add your full Webhook URL below, including https://
# SLACKURL="{{SLACKURL}}"

# Normally only successful deployments are posted to Slack.
# Enable the settings below to post on WARNiNG and/or ERROR.
# SLACKERROR="{{SLACKERROR}}"


###############################################################################
# Webhooks
###############################################################################

# Webhook POST URL
# POSTURL="{{POSTURL}}"


###############################################################################
# Logging
###############################################################################

# Strips the bulk of nasty PHP debug messages out of the
# log files that are emailed upon deployment.
# NOPHP="{{NOPHP}}"

# If you are not dbugging your stir install, you should probably set TERSE
# to "TRUE", which will keep your log files from including debug information.
# TERSE="{{TERSE}}"

# IF INCOGNITO is set to true, log files as well as verbose output to screen
# will be stripped of details such as email addresses and system file paths.
# INCOGNITO="{{INCOGNITO}}"

 # Post HTML logs to remote server. This needs to be set to "TRUE" even you
# are only posting to LOCALHOST.
# REMOTELOG="{{REMOTELOG}}"

# Define the root url where the stir log will be accessible with no
# trailing slash
# REMOTEURL="{{REMOTEURL}}"

# If using HTML logs, define which template you'd like to use. HTML templates
# are stored in separate folders in /etc/stir/html. The value used below
# should be the folder name of your template.
# REMOTETEMPLATE="{{REMOTETEMPLATE}}"

# Post logs via SCP
# SCPPOST="{{SCPPOST}}"
# SCPUSER="{{SCPUSER}}"
# SCPHOST="{{SCPHOST}}"
# SCPHOSTPATH="{{SCPHOSTPATH}}"
# SCPPORT="{{SCPPORT}}"

# DANGER DANGER: If for some reason you absolutely can't use an SSH key you
# can configure your password here
# SCPPASS="{{SCPPASS}}"

# If you're posting logs to a place on the same machine you're deploying from,
# set POSTTOLOCALHOST to "TRUE" and define the path where you want to store
# the HTML logs.
# LOCALHOSTPOST="{{LOCALHOSTPOST}}"
# LOCALHOSTPATH="{{LOCALHOSTPATH}}"

# Set the number of days before logs should be deleted. Currently this only
# works for logs stored on localhost.
# EXPIRELOGS="{{EXPIRELOGS}}"


###############################################################################
# Invoice Ninja integration
###############################################################################

# Full url of your Invoice Ninja host, with no trailing slash
# IN_HOST="{{IN_HOST}}"

# API Token, created at https://yourinvoicehost.com/settings/api_tokens
# IN_TOKEN="{{IN_TOKEN}}"

# This is to work around the fact that Invoice Ninja's API uses the internal
# invoice number as opposed to the front-facing number. If your first invoice
# number is something other than "1", set that value below.
# IN_OFFSET="{{IN_OFFSET}}"


###############################################################################
# Dropbox integration
###############################################################################

# For functions that require Dropbox integration, define the variables below.
# Currently this is used for checking when your last backups were made using
# the Wordpress BackWPUp plugin, and feeding that data into the stats pages as
# well as the email digests

# Dropbox API token
# DB_API_TOKEN="{{DB_API_TOKEN}}"


###############################################################################
# Bugsnag integration
###############################################################################

# BUGSNAG_AUTH="{{BUGSNAG_AUTH}}"
